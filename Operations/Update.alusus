@merge module Rows {
    class Update {
        def _table: String;
        handler this.table = String {
            this._table = escapeString(value);
            return this._table;
        }

        def _data: Array[String];
        handler this.data = Array[String] {
            this._data.clear();
            def i: Int;
            for i = 0, i < value.getLength(), ++i {
                this._data.add(escapeString(value(i)));
            }
            return this._data;
        }

        def _columns: Array[String];
        handler this.columns = Array[String] {
            this._columns.clear();
            def i: Int;
            for i = 0, i < value.getLength(), ++i {
                this._columns.add(escapeString(value(i)));
            }
            return this._columns;
        }

        def _condition: String;
        handler this.condition(statement: CharsPtr, args: ...any) {
            this._condition = "";
            prepareStatement[this._condition, statement, args];
        }

        handler this.generateSqlString(): String {
            def sql: String = String("UPDATE ") + this._table + "\nSET ";
            def i: int = 0;
            for i = 0, i < this._data.getLength(), ++i {
                sql += String("\"") + this._columns(i) + String("\" = '") + this._data(i) + "'";
                if i < this._data.getLength()-1 sql += ", " else sql += "\n";
            }
            sql += String("WHERE ") + this._condition;
            return sql;
        }
    }
}

