import "../Rows";
use Srl;
use Rows;

class Car {
    @notnull
    @pk
    @Integer
    def id: int;

    @VarChar["50"]
    @defult["My Car"]
    def name: String;

    @Float
    def price: float;

    Rows.getDataFunc[String("Car") , String("cars"), Car~ast];
}

Car.db.init(PostgresqlDriver(ConnectionParams().{
    dbName = "alusus";
    userName = "alusus";
    password = "alusus";
    host = "0.0.0.0";
    port = 5432;
}));
if !Car.db.isConnected() {
    System.fail(1, String("Error connecting to DB: ") + Car.db.getLastError());
}

Rows.autoCreate[Car~ast , String("cars")]
create(Car.db);

def c: Car;
def d: Array[Car]

def i: int=1
for i = 1, i < 30, i = i+1 {
    c.id = i
    c.name = String("Car ") + i;
    c.price = 200.0 * i
    c.saveData();
}

c.id = 900;
c.name = String("alusus Car");
c.price = 2500000.50;
c.saveData();

Console.print("\n");

d = Car.where[(price < 1000 or price > 5000) and id > 2].getData();

def k: int=0;
for k = 0, k < d.getLength(), k = k+1 {
    Console.print(d(k).id);
    Console.print("  ");
    Console.print(d(k).name);
    Console.print("  ");
    Console.print(d(k).price);
    Console.print("\n");
}
Console.print("\n");


Car.where[id=20];
Car.updateDataSet[(price=90 , name="BMW")];

d = c.getData();

for k=0, k < d.getLength(), k=k+1 {
    Console.print(d(k).id);
    Console.print("  ");
    Console.print(d(k).name);
    Console.print("  ");
    Console.print(d(k).price);
    Console.print("\n");
}

